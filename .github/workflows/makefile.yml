name: Build nflog_dns

on:
  workflow_dispatch:
  push:
    branches:
    - '**'

jobs:
  # Do integration testing, requires full VM
  ubuntu-full:
    name: Ubuntu 24.04 compile and test
    runs-on: ubuntu-24.04

    steps:
    - uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Install build and test dependencies
      run: |
        sudo rm -f /var/lib/man-db/auto-update
        sudo apt-get update
        sudo apt-get -y --no-install-recommends install libtins-dev libnetfilter-log-dev libspdlog-dev python3 build-essential debhelper-compat

    - name: Compile binary
      run: make

    - name: Run tests
      run: sudo make test

    - name: Verify installation
      run: sudo make install

  # Build packages, uses containers
  build-matrix:
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: Debian 13
            image: debian:13
            pkgtype: deb
            install: apt-get update && apt-get -y --no-install-recommends install ca-certificates git libtins-dev libnetfilter-log-dev libspdlog-dev python3 build-essential debhelper-compat lsb-release
          - name: Debian 12
            image: debian:12
            pkgtype: deb
            install: apt-get update && apt-get -y --no-install-recommends  install ca-certificates git libtins-dev libnetfilter-log-dev libspdlog-dev python3 build-essential debhelper-compat lsb-release
          - name: Fedora 42
            image: fedora:42
            pkgtype: rpm
            install: dnf install -y git gcc-c++ make libpcap-devel libtins-devel libnetfilter_log-devel spdlog-devel python3 rpm-build rpmdevtools rpmlint
          - name: Fedora 41
            image: fedora:41
            pkgtype: rpm
            install: dnf install -y git gcc-c++ make libpcap-devel libtins-devel libnetfilter_log-devel spdlog-devel python3 rpm-build rpmdevtools rpmlint
          - name: openSUSE Leap 15.6
            image: opensuse/leap:15.6
            pkgtype: rpm
            install: |
              zypper -n ref
              zypper -n in --no-recommends gcc-c++ make libpcap-devel libtins-devel libnetfilter_log-devel spdlog-devel fmt-devel python3 rpm-build rpmdevtools rpmlint
          - name: openSUSE Tumbleweed
            image: opensuse/tumbleweed
            pkgtype: rpm
            install: |
              zypper -n ref
              zypper -n in --no-recommends gcc-c++ make libpcap-devel libtins-devel libnetfilter_log-devel spdlog-devel fmt-devel python3 rpm-build rpmdevtools rpmlint
          - name: Ubuntu 24.04
            image: ubuntu:24.04
            pkgtype: deb
            install: apt-get update && apt-get -y --no-install-recommends install ca-certificates git libtins-dev libnetfilter-log-dev libspdlog-dev python3 build-essential debhelper-compat lsb-release
          - name: Ubuntu 22.04
            image: ubuntu:22.04
            pkgtype: deb
            install: apt-get update && apt-get -y --no-install-recommends  install ca-certificates git libtins-dev libnetfilter-log-dev libspdlog-dev python3 build-essential debhelper-compat lsb-release

    runs-on: ubuntu-latest
    container:
      image: ${{ matrix.image }}

    name: ${{ matrix.name }} build

    steps:
    - name: Install dependencies
      run: ${{ matrix.install }}

    - uses: actions/checkout@v4

    - name: Compile binary
      run: make

    - name: Verify installation
      run: make install

    - name: Inject distribution into package version
      run: |
        case "${{ matrix.pkgtype }}" in
        "deb")
          CODENAME="$(lsb_release -c -s)"
          FULL_VERSION="$(dpkg-parsechangelog --show-field Version)"
          NEW_VERSION="${FULL_VERSION}~${CODENAME}1"
          PACKAGE="$(dpkg-parsechangelog --show-field Source)"
          sed -i "1s/^.*$/${PACKAGE} (${NEW_VERSION}) ${CODENAME}; urgency=medium/" "debian/changelog"
          echo "Package version: ${NEW_VERSION}"
          ;;
        "rpm")
          if grep -q "opensuse" "/etc/os-release"
          then
            RELEASE="$(grep '^ID=' "/etc/os-release" | cut -d '=' -f 2 | tr -d '"')"
            RELEASE="${RELEASE##*-}"
            sed -i "s/^Release:.*/Release:        1.${RELEASE}/" "nflog_dns.spec"
            echo "Release: ${DISTRIBUTION_ID}"
          else
            echo "No changes"
          fi
          ;;
        *)
          echo "Error: unknown pkgtype" >&2
          exit 1
          ;;
        esac

    - name: Build package
      run: |
        case "${{ matrix.pkgtype }}" in
        "deb")
          make deb
          ;;
        "rpm")
          make rpm
          ;;
        *)
          echo "Error: unknown pkgtype" >&2
          exit 1
          ;;
        esac
